#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.



# Stylesheets 
#compile '/assets/css/**' do
#  filter :less
#end



compile '/assets/img/*' do
  # don’t filter or layout
end

compile '/assets/ico/*' do
  # don’t filter or layout
end

compile '/assets/css/*' do
  # filter :less	
  filter :rainpress
  filter :relativize_paths, :type => :css
end
     
compile '/assets/less/*' do
#  filter :less
end

#
compile '/assets/js/*' do
  # don’t filter or layout
end

compile 'blog/feed' do
  filter :erb
end


compile '/blog/*' do
  filter :kramdown
  layout 'post'
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout 'default'
    #filter :rubypants_ddfreyne
  end
  filter :relativize_paths, :type => :html
end


# Stylesheets 
route '/assets/css/*' do
  # path with version
  #item.identifier[0..-2] + '-v' + item[:version].to_s + '.css'
  item.identifier.chop + '.css'
end

route '/assets/less/*' do
  # path with version
  #item.identifier[0..-2] + '-v' + item[:version].to_s + '.css'
  item.identifier.chop + '.less'
end

route '/assets/js/*' do
  item.identifier.chop + '.js'
end

route '/blog/*' do
  y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier).captures

  "/blog/#{y}/#{m}/#{slug}/index.html"
end



#route '/assets/css/*' do
#  item.identifier.chop + '.css'
#end

#route '/assets/js/*' do
#  item.identifier.chop + '.js'
#end

#route '/assets/less/*' do
#  item.identifier.chop + '.css'
# end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
